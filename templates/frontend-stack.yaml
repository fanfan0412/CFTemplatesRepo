AWSTemplateFormatVersion: "2010-09-09"
Description: Frontend stack for React app (S3 + CloudFront OAC + SSM)

Parameters:
  SiteBucketName:
    Type: String
    Description: Globally-unique bucket name (e.g. cafe-frontend-yourid-apne1)

Resources:
  SiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref SiteBucketName
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  OAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: !Sub '${AWS::StackName}-oac'
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  Distribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        DefaultRootObject: index.html
        PriceClass: PriceClass_100
        Origins:
          - Id: s3Origin
            DomainName: !GetAtt SiteBucket.RegionalDomainName
            S3OriginConfig: {}
            OriginAccessControlId: !Ref OAC
        DefaultCacheBehavior:
          TargetOriginId: s3Origin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [GET, HEAD, OPTIONS]
          CachedMethods: [GET, HEAD, OPTIONS]
          Compress: true
          ForwardedValues: { QueryString: false }
        # 讓 React Router 直接刷新內頁不 404
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 0
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
            ErrorCachingMinTTL: 0

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowCloudFrontOAC
            Effect: Allow
            Principal: { Service: cloudfront.amazonaws.com }
            Action: s3:GetObject
            Resource: !Sub 'arn:aws:s3:::${SiteBucket}/*'
            Condition:
              StringEquals:
                AWS:SourceArn: !GetAtt Distribution.Arn

  FrontendBucketParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /cafe/frontend/bucket
      Type: String
      Value: !Ref SiteBucket

  FrontendDistParam:
    Type: AWS::SSM::Parameter
    Properties:
      Name: /cafe/frontend/distribution
      Type: String
      Value: !Ref Distribution

Outputs:
  BucketName:       { Value: !Ref SiteBucket }
  CloudFrontDomain: { Value: !GetAtt Distribution.DomainName }
  DistributionId:   { Value: !Ref Distribution }
